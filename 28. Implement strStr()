/**
* Implement strStr().

* Return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.

* Example 1:

* Input: haystack = "hello", needle = "ll"
* Output: 2
* Example 2:

* Input: haystack = "aaaaa", needle = "bba"
* Output: -1
* Clarification:

* What should we return when needle is an empty string? This is a great question to ask during an interview.

* For the purpose of this problem, we will return 0 when needle is an empty string. This is consistent to C's strstr() and Java's indexOf().
*/

/*Solution 1: Brute force, not efficient*/

class Solution {
public:
    int strStr(string haystack, string needle) {
        if(!needle.size()) return 0;
        int i = 0 ; 
        int temp;
        while(i < haystack.size()){
            if(needle[0] == haystack[i]){
                temp = i;
                int j;
                for(j = 0 ; j < needle.size() ; j++){
                    int index = i+j;
                    if(index<haystack.size()) {
                        if(haystack[index] != needle[j]){
                            break;
                        }
                    }else{
                        break;
                    }
                }
                if(j-1 == needle.size()-1){
                    return temp;
                }else{
                    i = temp;
                }    
            }
            i++;
        }
        return -1;
    }
};

/*Solution 2: Beat 97%, very efficienet*/

class Solution {
public:
    int strStr(string haystack, string needle) {
        for(int i = 0; ; i++){
            for(int j = 0 ; ;j++){
                if(j == needle.size()) return i;
                if(j+i == haystack.size()) return -1;
                if(needle[j] != haystack[i+j]) break;
            }
        }
    }
};

/**
* A sentence S is given, composed of words separated by spaces. Each word consists of lowercase and uppercase letters only.

* We would like to convert the sentence to "Goat Latin" (a made-up language similar to Pig Latin.)

* The rules of Goat Latin are as follows:

* If a word begins with a vowel (a, e, i, o, or u), append "ma" to the end of the word.
* For example, the word 'apple' becomes 'applema'.
 
* If a word begins with a consonant (i.e. not a vowel), remove the first letter and append it to the end, then add "ma".
* For example, the word "goat" becomes "oatgma".
 
* Add one letter 'a' to the end of each word per its word index in the sentence, starting with 1.
* For example, the first word gets "a" added to the end, the second word gets "aa" added to the end and so on.
* Return the final sentence representing the conversion from S to Goat Latin. 

 

* Example 1:
* Input: "I speak Goat Latin"
* Output: "Imaa peaksmaaa oatGmaaaa atinLmaaaaa"

* Example 2:
* Input: "The quick brown fox jumped over the lazy dog"
* Output: "heTmaa uickqmaaa rownbmaaaa oxfmaaaaa umpedjmaaaaaa overmaaaaaaa hetmaaaaaaaa azylmaaaaaaaaa ogdmaaaaaaaaaa"
*/

/*
Solution 1: Take out each word from the string using stringstram. Compare the first character of word then 
based on whether it's vowel or not, work as per instructions.
*/

class Solution {
public:
    string toGoatLatin(string S) {
        string result;
        int count= 0;
        stringstream iss(S);  //for breaking the words
        string word;
        while(iss>>word){
            ++count;
            char firstChar = tolower(word.at(0));    //extract first letter
            if(firstChar == 'a' || firstChar == 'e' || firstChar == 'i' || firstChar == 'o' || firstChar == 'u'){
                word+="ma";
                string end(count,'a');
                word+=end;
            }else{
                char first = word[0];      //extract first element from the word
                word+=first;      //append first character of word at the end 
                word+="ma";
                word.erase(word.begin());
                string end(count, 'a');
                word+=end;
            }
            result+=word;
            result+= " ";
        }
        result.erase(result.begin()+(result.size()-1)); //remove extra space at the end of string
        return result;
    }
};


/*

*/
class Solution {
public:
    string toGoatLatin(string S) {
        stringstream iss(S), oss;
        string vowels("aeiouAEIOU"), word, a;
        while (iss >> word) {
            a.push_back('a');
            if (vowels.find_first_of(word[0]) != string::npos) // begin with a vowel
                oss << ' ' << word << "ma" << a;
            else // begin with a consonant
                oss << ' ' << word.substr(1) << word[0] << "ma" << a;
        }
        return oss.str().substr(1);
    }
};

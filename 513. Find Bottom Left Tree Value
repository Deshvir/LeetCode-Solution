/*
* Given a binary tree, find the leftmost value in the last row of the tree.

* Example 1:
* Input:
*     2
*    / \
*   1   3
* Output:
* 1

* Example 2: 
* Input:

*         1
*        / \
*       2   3
*      /   / \
*     4   5   6
*        /
*       7
* Output:
* 7
* Note: You may assume the tree (i.e., the given root node) is not NULL.
*/


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */

//Solution: Solved using DFS

class Solution {
public:
    int result = 0;
    int max_val = 0;
    int count = 0;
    int findBottomLeftValue(TreeNode* root) {
        if(root) helper(root, 1);
        return result;
    }
    
    void helper(TreeNode * root, int count){
        if(root==NULL){
            return ;
        }
        if(count > max_val){
            max_val++;
            result = root->val;
        }    
        helper(root->left, count+1);
        helper(root->right, count+1);
        
    }
};

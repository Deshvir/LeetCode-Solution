# Reverse a singly linked list.

# Example:

# Input: 1->2->3->4->5->NULL
# Output: 5->4->3->2->1->NULL

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode* preHead = NULL;
        ListNode* temp; //for traversing on behalf of head and reversing the linked list
        while(head!=NULL){
            temp = head;
            head = head->next;
            temp->next = preHead;
            preHead = temp;    
        }
        return preHead;
    }
};

/**
* Given a binary tree, return the inorder traversal of its nodes' values.

* Example:
* Input: [1,null,2,3]
*    1
*     \
*      2
*     /
*    3

* Output: [1,3,2]
* Follow up: Recursive solution is trivial, could you do it iteratively?
*/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 
//Solution 1: Recurssive solution for inorder traversal 
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> vec;
        traverse(root, vec);
        return vec;
    }
    
    void traverse(TreeNode * root, vector<int> &vec){
        if(root){
            traverse(root->left, vec);
            vec.push_back(root->val);
            traverse(root->right, vec);
        }
    }
};

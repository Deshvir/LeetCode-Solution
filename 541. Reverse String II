/*
* Given a string and an integer k, you need to reverse the first k characters for every 2k characters counting from the start of the string. If there are less than k characters left, reverse all of them. If there are less than 2k but greater than or equal to k characters, then reverse the first k characters and left the other as original.
* Example:
* Input: s = "abcdefg", k = 2
* Output: "bacdfeg"

* Restrictions:
* The string consists of lower English letters only.
* Length of the given string and k will in the range [1, 10000]
*/

//Solution 1: Using inbuilt sort function
class Solution {
public:
    string reverseStr(string s, int k) {
        int len = s.length();
        int i = 0;
        while(i <= len){
            int remain = len - i;
            if(remain == 0) break;

            if(remain >=(2*k)){
                reverse(s.begin()+i, s.begin()+i+k);
                i = i+ (2*k);
            }else if((k <= remain) && (remain < (2*k))){
                reverse(s.begin()+i, s.begin()+i+k);
                i = i+ remain;
            }else if(remain < k){
                reverse(s.begin()+i, s.begin()+i+remain);
                i = i+ remain;
            }
        }
        return s;
    }
};

//Solutoion 2: From leetcode
class Solution {
public:
    string reverseStr(string s, int k) {
        for (int i = 0; i < s.size(); i += 2*k) reverse(s.begin()+i, min(s.begin()+i+k, s.end()));
        return s;
    }
};

